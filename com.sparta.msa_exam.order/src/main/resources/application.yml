spring:
  application:
    name: order-service
  data:
    redis:
      host: localhost
      port: 6379
      username: default
      password: systempass
      cache:
        time-to-live: 60000 # 캐시 TTL 설정 (60초)

  jpa:
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true
    show-sql: true

  sql:
    init:
      mode: always

server:
  port: 19092
eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/

management:
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: "*"


resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
    instances:
      productService:
        base-config: default

---

# dev 프로필 설정
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:test;
    driver-class-name: org.h2.Driver
    username: user
    password: password
  jpa:
    hibernate:
      ddl-auto: update

---

# prod 프로필 설정
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:h2:mem:test;
    driver-class-name: org.h2.Driver
    username: user
    password: password
  jpa:
    hibernate:
      ddl-auto: update